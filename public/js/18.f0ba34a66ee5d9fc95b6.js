webpackJsonp([18],{

/***/ 254:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_cacheDirectory_true_presets_env_modules_false_targets_browsers_2_uglify_true_plugins_transform_object_rest_spread_transform_runtime_polyfill_false_helpers_false_syntax_dynamic_import_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue__ = __webpack_require__(279);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_27446604_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Profile_vue__ = __webpack_require__(301);\nvar disposed = false\nvar normalizeComponent = __webpack_require__(13)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_cacheDirectory_true_presets_env_modules_false_targets_browsers_2_uglify_true_plugins_transform_object_rest_spread_transform_runtime_polyfill_false_helpers_false_syntax_dynamic_import_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_27446604_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Profile_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/js/components/offender/Profile.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-27446604\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-27446604\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9vZmZlbmRlci9Qcm9maWxlLnZ1ZT8wODRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxFQUErRDtBQUNoRztBQUNxWDtBQUNhO0FBQ2xZO0FBQ29RO0FBQ3BRO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMFRBQWM7QUFDaEIsRUFBRSxnT0FBZ0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEdBQUc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRWMsZ0ZBQWlCIiwiZmlsZSI6IjI1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkaXNwb3NlZCA9IGZhbHNlXG52YXIgbm9ybWFsaXplQ29tcG9uZW50ID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXJcIilcbi8qIHNjcmlwdCAqL1xuZXhwb3J0ICogZnJvbSBcIiEhYmFiZWwtbG9hZGVyP3tcXFwiY2FjaGVEaXJlY3RvcnlcXFwiOnRydWUsXFxcInByZXNldHNcXFwiOltbXFxcImVudlxcXCIse1xcXCJtb2R1bGVzXFxcIjpmYWxzZSxcXFwidGFyZ2V0c1xcXCI6e1xcXCJicm93c2Vyc1xcXCI6W1xcXCI+IDIlXFxcIl0sXFxcInVnbGlmeVxcXCI6dHJ1ZX19XV0sXFxcInBsdWdpbnNcXFwiOltcXFwidHJhbnNmb3JtLW9iamVjdC1yZXN0LXNwcmVhZFxcXCIsW1xcXCJ0cmFuc2Zvcm0tcnVudGltZVxcXCIse1xcXCJwb2x5ZmlsbFxcXCI6ZmFsc2UsXFxcImhlbHBlcnNcXFwiOmZhbHNlfV0sXFxcInN5bnRheC1keW5hbWljLWltcG9ydFxcXCJdfSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL1Byb2ZpbGUudnVlXCJcbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISFiYWJlbC1sb2FkZXI/e1xcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZSxcXFwicHJlc2V0c1xcXCI6W1tcXFwiZW52XFxcIix7XFxcIm1vZHVsZXNcXFwiOmZhbHNlLFxcXCJ0YXJnZXRzXFxcIjp7XFxcImJyb3dzZXJzXFxcIjpbXFxcIj4gMiVcXFwiXSxcXFwidWdsaWZ5XFxcIjp0cnVlfX1dXSxcXFwicGx1Z2luc1xcXCI6W1xcXCJ0cmFuc2Zvcm0tb2JqZWN0LXJlc3Qtc3ByZWFkXFxcIixbXFxcInRyYW5zZm9ybS1ydW50aW1lXFxcIix7XFxcInBvbHlmaWxsXFxcIjpmYWxzZSxcXFwiaGVscGVyc1xcXCI6ZmFsc2V9XSxcXFwic3ludGF4LWR5bmFtaWMtaW1wb3J0XFxcIl19IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vUHJvZmlsZS52dWVcIlxuLyogdGVtcGxhdGUgKi9cbmltcG9ydCBfX3Z1ZV90ZW1wbGF0ZV9fIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTI3NDQ2NjA0XFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vUHJvZmlsZS52dWVcIlxuLyogdGVtcGxhdGUgZnVuY3Rpb25hbCAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyA9IGZhbHNlXG4vKiBzdHlsZXMgKi9cbnZhciBfX3Z1ZV9zdHlsZXNfXyA9IG51bGxcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3RlbXBsYXRlX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvanMvY29tcG9uZW50cy9vZmZlbmRlci9Qcm9maWxlLnZ1ZVwiXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgZmFsc2UpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0yNzQ0NjYwNFwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTI3NDQ2NjA0XCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9XG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRpc3Bvc2VkID0gdHJ1ZVxuICB9KVxufSkoKX1cblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50LmV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvb2ZmZW5kZXIvUHJvZmlsZS52dWVcbi8vIG1vZHVsZSBpZCA9IDI1NFxuLy8gbW9kdWxlIGNodW5rcyA9IDE4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///254\n");

/***/ }),

/***/ 279:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vform__ = __webpack_require__(150);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vform___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vform__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nvar axios = __webpack_require__(14);\nvar $ = __webpack_require__(172);\nvar ability = __webpack_require__(174);\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    data: function data() {\n        return {\n            addtooltip: 'Add offender.',\n            viewtooltip: 'View offender profile',\n            edittooltip: 'Edit offender.',\n            deletetooltip: 'Delete Offender.',\n            addcasetooltip: 'Add new case.',\n            editcasetooltip: 'Edit case...',\n            editmode: false,\n            photo: null,\n            search: '',\n            nationalities: {},\n            provinces: {},\n            province: {},\n            districts: {},\n            district: {},\n            villages: {},\n            village: {},\n            business: {},\n            businesses: {},\n            network: {},\n            networks: {},\n            offenders: {},\n            statuses: {},\n            status: {},\n            units: {},\n            unit: {},\n            types: {},\n            type: {},\n            CAN: '',\n            CANNOT: '',\n            form: new __WEBPACK_IMPORTED_MODULE_0_vform___default.a({\n                id: '',\n                FirstName: '',\n                LastName: '',\n                Gender: '',\n                Age: '',\n                IDCardNumber: '',\n                Occupation: '',\n                Nationality: '',\n                Address: '',\n                Province: '',\n                District: '',\n                Village: '',\n                MainBusiness: '',\n                MainNetwork: '',\n                Photo: ''\n            }),\n            formcase: new __WEBPACK_IMPORTED_MODULE_0_vform___default.a({\n                id: '',\n                offender_id: '',\n                DetectedDate: '',\n                Type: '',\n                ItemNumber: '',\n                Unit: '',\n                Amount: '',\n                CaseDescription: '',\n                Evidence: '',\n                Status: '',\n                Location: '',\n                User_id: '',\n                Action: ''\n            })\n        };\n    },\n\n    //------- methods class ---------------------------\n    methods: {\n        searchit: _.debounce(function () {\n            Fire.$emit('searching');\n        }, 1000),\n        getResults: function getResults() {\n            var _this = this;\n\n            var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n            axios.get('/api/offender?page=' + page).then(function (response) {\n                _this.offenders = response.data;\n            });\n        },\n        loadOffender: function loadOffender() {\n            var _this2 = this;\n\n            axios.get(\"/api/offender\").then(function (_ref) {\n                var data = _ref.data;\n                return _this2.offenders = data;\n            });\n            //console.log(this.offenders);\n        },\n        loadNationalities: function loadNationalities() {\n            var _this3 = this;\n\n            axios.get(\"/api/nationality\").then(function (_ref2) {\n                var data = _ref2.data;\n                return _this3.nationalities = data;\n            });\n            // console.log(this.nationalities);\n        },\n        loadBusinesses: function loadBusinesses() {\n            var _this4 = this;\n\n            axios.get(\"/api/getBusinesses\").then(function (_ref3) {\n                var data = _ref3.data;\n                return _this4.businesses = data;\n            });\n            // console.log(this.nationalities);\n        },\n        loadNetworks: function loadNetworks() {\n            var _this5 = this;\n\n            axios.get(\"/api/getNetworks\").then(function (_ref4) {\n                var data = _ref4.data;\n                return _this5.networks = data;\n            });\n            // console.log(this.nationalities);\n        },\n        loadDistricts: function loadDistricts() {\n            var _this6 = this;\n\n            axios.get(\"/api/loadDistricts\").then(function (_ref5) {\n                var data = _ref5.data;\n                return _this6.districts = data;\n            });\n            // console.log(this.nationalities);\n        },\n        loadVillages: function loadVillages() {\n            var _this7 = this;\n\n            axios.get(\"/api/loadVillages\").then(function (_ref6) {\n                var data = _ref6.data;\n                return _this7.villages = data;\n            });\n            // console.log(this.nationalities);\n        },\n        getProvinces: function getProvinces() {\n            var _this8 = this;\n\n            axios.get(\"/api/getProvinces\").then(function (_ref7) {\n                var data = _ref7.data;\n                return _this8.provinces = data;\n            });\n\n            //console.log(provinces);\n        },\n        getDistricts: function getDistricts(province_id) {\n            //console.log(province_id);\n            axios.get('/api/getDistricts', {\n                params: {\n                    province_id: province_id\n                }\n            }).then(function (response) {\n                this.districts = response.data;\n            }.bind(this));\n        },\n        getVillages: function getVillages(district_id) {\n            axios.get(\"/api/getVillages\", {\n                params: {\n                    district_id: district_id\n                }\n            }).then(function (response) {\n                this.villages = response.data;\n            }.bind(this));\n        },\n        getCaseTypes: function getCaseTypes() {\n            var _this9 = this;\n\n            axios.get(\"/api/getCaseTypes\").then(function (_ref8) {\n                var data = _ref8.data;\n                return _this9.types = data;\n            });\n        },\n        getUnits: function getUnits() {\n            var _this10 = this;\n\n            axios.get(\"/api/getUnits\").then(function (_ref9) {\n                var data = _ref9.data;\n                return _this10.units = data;\n            });\n        },\n        getCaseStatus: function getCaseStatus() {\n            var _this11 = this;\n\n            axios.get(\"/api/getCaseStatus\").then(function (_ref10) {\n                var data = _ref10.data;\n                return _this11.statuses = data;\n            });\n        },\n\n        //==========================================================================\n        deleteOffender: function deleteOffender(id) {\n            var _this12 = this;\n\n            swal.fire({\n                title: \"Are you sure.. ທ່ານ​ແນ່​ໃຈ​ແທ້ ບໍ ?\",\n                text: \"You won't be able to revert this!​.. ທ່ານ​ຈະ​ບໍ່​ສາ​ມາດ​ເອົາ​ຄືນ​ໄດ້​ອີກ\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!... ລືບ​ໄດ້'\n            }).then(function (result) {\n                if (result.value) {\n                    _this12.form.delete('/api/offender/' + id).then(function () {\n                        swal.fire('Deleted!​..ລືບ​ແລ້ວ', 'Your file has been deleted... ຟາຍ​ທ່ານ​ຖືກ​ລືບ​ອອກ​ແລ້ວ', 'success');\n                        Fire.$emit('AfterCreate');\n                    }).catch(function () {\n                        swal('Failed', 'Something wrong.. ມີ​ການ​ຜິດ​ພາດ', 'warning');\n                    });\n                }\n            });\n        },\n        onFileChange: function onFileChange(e) {\n            console.log(e.target.files[0]);\n            this.Photo = e.target.files[0];\n        },\n        selectFile: function selectFile(e) {\n            var _this13 = this;\n\n            var file = e.target.files[0];\n            console.log(this.file);\n            var reader = new FileReader();\n            if (file['size'] < 2111775) {\n                reader.onloadend = function (file) {\n                    _this13.form.Photo = reader.result;\n                };\n                reader.readAsDataURL(file);\n            } else {\n                swal({\n                    type: 'error',\n                    title: 'Ooops..',\n                    text: 'File size is more than 2MB...'\n                });\n            }\n        },\n        selectPicture: function selectPicture(e) {\n            var _this14 = this;\n\n            var file = e.target.files[0];\n            console.log(this.file);\n            var reader = new FileReader();\n            if (file['size'] < 2111775) {\n                reader.onloadend = function (file) {\n                    _this14.formcase.Evidence = reader.result;\n                };\n                reader.readAsDataURL(file);\n            } else {\n                swal({\n                    type: 'error',\n                    title: 'Ooops..',\n                    text: 'File size is more than 2MB...'\n                });\n            }\n        },\n\n        //=================================  Add new cases on offender ===========================================\n        addCaseModal: function addCaseModal(id) {\n            this.formcase.reset();\n            //this.offender_id = id;\n            //console.log(this.offender_id);\n            this.formcase.offender_id = id;\n            console.log(this.formcase.offender_id);\n            this.getCaseTypes();\n            this.getUnits();\n            this.getCaseStatus();\n            $('#addNewCase').modal('show');\n        },\n        addNewCase: function addNewCase() {\n            var _this15 = this;\n\n            this.$Progress.start();\n            this.formcase.post('/api/mcase/').then(function () {\n                Fire.$emit('AfterCreate');\n                $('#addNewCase').modal('hide');\n                toast({\n                    type: 'success',\n                    title: 'Case added successfully'\n                });\n                _this15.$Progress.finish();\n            }).catch(function () {\n                $('#addNewCase').modal('hide');\n                toast({\n                    type: 'warning',\n                    title: 'Case added failed...'\n                });\n                _this15.$Progress.fail();\n            });\n        },\n        editCaseModal: function editCaseModal(id) {\n            alert('Please edit case in Find Offender deatil page..');\n        },\n\n        //-------------------------------------create offender--------------------------------------------------------------------------\n        createOffender: function createOffender() {\n            var _this16 = this;\n\n            this.$Progress.start();\n            this.form.post('/api/offender').then(function () {\n                Fire.$emit('AfterCreate');\n                $('#addNew').modal('hide');\n                toast({\n                    type: 'success',\n                    title: 'Offender Created in successfully'\n                });\n                _this16.$Progress.finish();\n            }).catch(function () {\n                _this16.$Progress.fail();\n            });\n        },\n        updateOffender: function updateOffender() {\n            var _this17 = this;\n\n            this.form.put('/api/offender').then(function () {\n                // success\n                $('#addNew').modal('hide');\n                swal('Updated!', 'Information has been updated.', 'success');\n                _this17.$Progress.finish();\n                Fire.$emit('AfterCreate');\n            }).catch(function () {\n                _this17.$Progress.fail();\n            });\n        },\n        viewModal: function viewModal(offender) {\n            this.editmode = true;\n            this.form.reset();\n            this.loadNationalities();\n            this.getProvinces();\n            this.loadDistricts();\n            this.loadVillages();\n            this.loadBusinesses();\n            this.loadNetworks();\n            $('#addNew').modal('show');\n            this.form.fill(offender);\n        },\n        editModal: function editModal(offender) {\n            this.editmode = true;\n            this.form.reset();\n            this.loadNationalities();\n            this.getProvinces();\n            this.loadDistricts();\n            this.loadVillages();\n            this.loadBusinesses();\n            this.loadNetworks();\n            $('#addNew').modal('show');\n            this.form.fill(offender);\n        },\n        newModal: function newModal() {\n            this.editmode = false;\n            this.form.reset();\n            this.loadNationalities();\n            this.getProvinces();\n            this.loadBusinesses();\n            this.loadNetworks();\n            $('#addNew').modal('show');\n        }\n    },\n    //------- created class initialized component---------------------------\n    // 1-create users.vue in components folder\n    // 2-register route path in app.js    \n    created: function created() {\n        var _this18 = this;\n\n        Fire.$on('searching', function () {\n            //let query = this.$parent.search;\n            var query = _this18.search;\n            axios.get('/api/findOffender?q=' + query).then(function (data) {\n                _this18.offenders = data.data;\n            }).catch(function () {});\n        });\n        this.$Progress.start();\n        this.loadOffender();\n        this.loadNationalities();\n        this.getProvinces();\n        this.loadBusinesses();\n        this.loadNetworks();\n        this.getCaseTypes();\n        this.getUnits();\n        this.getCaseStatus();\n\n        toast.fire({\n            type: 'success',\n            title: 'Offenders loaded successfully'\n        });\n        this.$Progress.finish();\n        Fire.$on('AfterCreate', function () {\n            _this18.loadOffender();\n        });\n        // console.log('Component mounted..')\n    },\n    mounted: function mounted() {\n        // console.log('Component mounted..');\n        this.CAN = ability.can('read', 'Post');\n        this.CANNOT = ability.cannot('read', 'Post');\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///279\n");

/***/ }),

/***/ 301:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container\" }, [\n    _c(\"div\", { staticClass: \"row mt-5\" }, [\n      _c(\"div\", { staticClass: \"form-group col-5-sm\" }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"col-md-12\" }, [\n        _c(\"div\", { staticClass: \"card\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"form-group col-4\" }, [\n              _c(\"div\", { staticClass: \"card-header\" }, [\n                _c(\"h3\", { staticClass: \"card-title\" }, [\n                  _vm._v(_vm._s(_vm.$t(\"offenderslist\")))\n                ])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group col-8\" }, [\n              _c(\"div\", { staticClass: \"card-tools\" }, [\n                _c(\"div\", { staticClass: \"form-group col-8\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"input-group input-group-sm mt-4\" },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.search,\n                            expression: \"search\"\n                          }\n                        ],\n                        staticClass: \"form-control form-control-navbar\",\n                        attrs: {\n                          type: \"search\",\n                          placeholder: \"Search\",\n                          \"aria-label\": \"Search\"\n                        },\n                        domProps: { value: _vm.search },\n                        on: {\n                          keyup: _vm.searchit,\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.search = $event.target.value\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"input-group-append\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn-navbar\",\n                            on: { click: _vm.searchit }\n                          },\n                          [_c(\"i\", { staticClass: \"fa fa-search\" })]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.addtooltip,\n                                expression: \"addtooltip\"\n                              }\n                            ],\n                            staticClass: \"btn btn-success btn-md ml-5 mt-1\",\n                            on: {\n                              click: function($event) {\n                                _vm.newModal()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(_vm._s(_vm.$t(\"addoffender\"))),\n                            _c(\"i\", { staticClass: \"fas fa-user-plus fa-fw\" })\n                          ]\n                        )\n                      ])\n                    ]\n                  )\n                ])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"box-body table-responsive no-padding\" }, [\n            _c(\"table\", { staticClass: \"table table-hover\" }, [\n              _c(\n                \"tbody\",\n                [\n                  _c(\"tr\", [\n                    _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"id\")))]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"photo\")))]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"firstname\")))]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"lastname\")))]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"age\")))]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"gender\")))]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"operation\")))])\n                  ]),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.offenders.data, function(offender) {\n                    return _c(\"tr\", { key: offender.id }, [\n                      _c(\"td\", [_vm._v(_vm._s(offender.id))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _c(\"a\", { attrs: { href: \"#\" } }, [\n                          _c(\"img\", {\n                            staticClass: \"img-thumbnail\",\n                            staticStyle: { width: \"50px\", height: \"50px\" },\n                            attrs: { src: \"/storage/images/\" + offender.Photo }\n                          })\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _vm._v(_vm._s(_vm._f(\"upText\")(offender.FirstName)))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _vm._v(_vm._s(_vm._f(\"upText\")(offender.LastName)))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(offender.Age))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(offender.Gender))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _c(\"a\", { attrs: { href: \"#\" } }, [\n                          _c(\n                            \"button\",\n                            {\n                              directives: [\n                                {\n                                  name: \"tooltip\",\n                                  rawName: \"v-tooltip\",\n                                  value: _vm.viewtooltip,\n                                  expression: \"viewtooltip\"\n                                }\n                              ],\n                              staticClass: \"btn btn-info btn-sm\",\n                              on: {\n                                click: function($event) {\n                                  _vm.viewModal(offender)\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(_vm._s(_vm.$t(\"view\"))),\n                              _c(\"i\", { staticClass: \"fas fa-user-plus fa-fw\" })\n                            ]\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"a\", { attrs: { href: \"#\" } }, [\n                          _c(\n                            \"button\",\n                            {\n                              directives: [\n                                {\n                                  name: \"tooltip\",\n                                  rawName: \"v-tooltip\",\n                                  value: _vm.edittooltip,\n                                  expression: \"edittooltip\"\n                                }\n                              ],\n                              staticClass: \"btn btn-success btn-sm\",\n                              on: {\n                                click: function($event) {\n                                  _vm.editModal(offender)\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(_vm._s(_vm.$t(\"edit\"))),\n                              _c(\"i\", { staticClass: \"fas fa-user-plus fa-fw\" })\n                            ]\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _vm.CANNOT\n                          ? _c(\"a\", { attrs: { href: \"#\" } }, [\n                              _c(\n                                \"button\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"tooltip\",\n                                      rawName: \"v-tooltip\",\n                                      value: _vm.deletetooltip,\n                                      expression: \"deletetooltip\"\n                                    }\n                                  ],\n                                  staticClass: \"btn btn-danger btn-sm\",\n                                  on: {\n                                    click: function($event) {\n                                      _vm.deleteOffender(offender.id)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._v(_vm._s(_vm.$t(\"delete\"))),\n                                  _c(\"i\", {\n                                    staticClass: \"fas fa-user-plus fa-fw\"\n                                  })\n                                ]\n                              )\n                            ])\n                          : _vm._e(),\n                        _vm._v(\n                          \"\\n                                        ----->\\n                                        \"\n                        ),\n                        _c(\"a\", { attrs: { href: \"#\" } }, [\n                          _c(\n                            \"button\",\n                            {\n                              directives: [\n                                {\n                                  name: \"tooltip\",\n                                  rawName: \"v-tooltip\",\n                                  value: _vm.addcasetooltip,\n                                  expression: \"addcasetooltip\"\n                                }\n                              ],\n                              staticClass: \"btn btn-primary btn-sm\",\n                              on: {\n                                click: function($event) {\n                                  _vm.addCaseModal(offender.id)\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(_vm._s(_vm.$t(\"addcase\"))),\n                              _c(\"i\", { staticClass: \"fas fa-user-plus fa-fw\" })\n                            ]\n                          )\n                        ])\n                      ])\n                    ])\n                  })\n                ],\n                2\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"card-footer\" },\n            [\n              _c(\"pagination\", {\n                attrs: { data: _vm.offenders },\n                on: { \"pagination-change-page\": _vm.getResults }\n              })\n            ],\n            1\n          )\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      {\n        staticClass: \"modal fade\",\n        attrs: {\n          id: \"addNew\",\n          tabindex: \"-1\",\n          role: \"dialog\",\n          \"aria-labelledby\": \"addNewLabel\",\n          \"aria-hidden\": \"true\"\n        }\n      },\n      [\n        _c(\n          \"div\",\n          {\n            staticClass: \"modal-dialog modal-dialog-centered modal-lg\",\n            attrs: { role: \"document\" }\n          },\n          [\n            _c(\"div\", { staticClass: \"modal-content\" }, [\n              _c(\"div\", { staticClass: \"modal-header\" }, [\n                _c(\n                  \"h5\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: !_vm.editmode,\n                        expression: \"!editmode\"\n                      }\n                    ],\n                    staticClass: \"modal-title\",\n                    attrs: { id: \"addNewLabel\" }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"addoffender\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"h5\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.editmode,\n                        expression: \"editmode\"\n                      }\n                    ],\n                    staticClass: \"modal-title\",\n                    attrs: { id: \"addNewLabel\" }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"updateoffender\")))]\n                ),\n                _vm._v(\" \"),\n                _vm._m(0)\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"form\",\n                {\n                  attrs: { enctype: \"multipart/form-data\" },\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      _vm.editmode ? _vm.updateOffender() : _vm.createOffender()\n                    }\n                  }\n                },\n                [\n                  _c(\"div\", { staticClass: \"modal-body\" }, [\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"FirstName\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"firstname\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.FirstName,\n                                expression: \"form.FirstName\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.form.errors.has(\"FirstName\")\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"FirstName\",\n                              placeholder: \"First Name\"\n                            },\n                            domProps: { value: _vm.form.FirstName },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.form,\n                                  \"FirstName\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"FirstName\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"LastName\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"lastname\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.LastName,\n                                expression: \"form.LastName\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.form.errors.has(\"LastName\")\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"LastName\",\n                              placeholder: \"Last Name\"\n                            },\n                            domProps: { value: _vm.form.LastName },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.form,\n                                  \"LastName\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"LastName\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"form-group col-4\" }, [\n                        _c(\"label\", { attrs: { for: \"Gender1\" } }, [\n                          _vm._v(_vm._s(_vm.$t(\"gender\")) + \" :\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-check form-check-inline\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.form.Gender,\n                                    expression: \"form.Gender\"\n                                  }\n                                ],\n                                staticClass: \"form-check-input\",\n                                attrs: {\n                                  type: \"radio\",\n                                  name: \"Gender\",\n                                  id: \"Gender1\",\n                                  value: \"M\"\n                                },\n                                domProps: {\n                                  checked: _vm._q(_vm.form.Gender, \"M\")\n                                },\n                                on: {\n                                  change: function($event) {\n                                    _vm.$set(_vm.form, \"Gender\", \"M\")\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"form-check-label\",\n                                  attrs: { for: \"Gender1\" }\n                                },\n                                [_vm._v(\"Male\")]\n                              )\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-check form-check-inline\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.form.Gender,\n                                    expression: \"form.Gender\"\n                                  }\n                                ],\n                                staticClass: \"form-check-input\",\n                                attrs: {\n                                  type: \"radio\",\n                                  name: \"Gender\",\n                                  id: \"Gender2\",\n                                  value: \"F\"\n                                },\n                                domProps: {\n                                  checked: _vm._q(_vm.form.Gender, \"F\")\n                                },\n                                on: {\n                                  change: function($event) {\n                                    _vm.$set(_vm.form, \"Gender\", \"F\")\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"form-check-label\",\n                                  attrs: { for: \"Gender2\" }\n                                },\n                                [_vm._v(\"Female\")]\n                              )\n                            ]\n                          )\n                        ])\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Age\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"age\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.Age,\n                                expression: \"form.Age\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: { \"is-invalid\": _vm.form.errors.has(\"Age\") },\n                            attrs: {\n                              type: \"number\",\n                              name: \"Age\",\n                              placeholder: \"Age...\"\n                            },\n                            domProps: { value: _vm.form.Age },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.form, \"Age\", $event.target.value)\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"Age\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"IDCardNumber\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"idcard\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.IDCardNumber,\n                                expression: \"form.IDCardNumber\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.form.errors.has(\"IDCardNumber\")\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"IDCardNumber\",\n                              placeholder: \"ID card no ....\"\n                            },\n                            domProps: { value: _vm.form.IDCardNumber },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.form,\n                                  \"IDCardNumber\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"IDCardNumber\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Occupation\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"occupation\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.Occupation,\n                                expression: \"form.Occupation\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.form.errors.has(\"Occupation\")\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"Occupation\",\n                              placeholder: \"Breif Occupation...\"\n                            },\n                            domProps: { value: _vm.form.Occupation },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.form,\n                                  \"Occupation\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"Occupation\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Nationality\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"nationality\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.Nationality,\n                                  expression: \"form.Nationality\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.form.errors.has(\"Nationality\")\n                              },\n                              attrs: { name: \"Nationality\", id: \"Nationality\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"Nationality\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Nationality\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.nationalities, function(nationality) {\n                                return _c(\"option\", { key: nationality.id }, [\n                                  _vm._v(_vm._s(nationality.NationEng))\n                                ])\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"Nationality\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-8\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Address\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"address\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"textarea\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.Address,\n                                expression: \"form.Address\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.form.errors.has(\"Address\")\n                            },\n                            attrs: {\n                              name: \"Address\",\n                              id: \"Address\",\n                              placeholder: \"Current Address ....\"\n                            },\n                            domProps: { value: _vm.form.Address },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.form,\n                                  \"Address\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"Address\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Province\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"province\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.Province,\n                                  expression: \"form.Province\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.form.errors.has(\"Province\")\n                              },\n                              attrs: { name: \"Province\", id: \"Province\" },\n                              on: {\n                                change: [\n                                  function($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call($event.target.options, function(o) {\n                                        return o.selected\n                                      })\n                                      .map(function(o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.form,\n                                      \"Province\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                  function($event) {\n                                    _vm.getDistricts(_vm.form.Province)\n                                  }\n                                ]\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Province\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.provinces, function(province) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: province.id,\n                                    domProps: { value: province.id }\n                                  },\n                                  [_vm._v(_vm._s(province.NameEng))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"Province\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\", attrs: { \"col-4\": \"\" } },\n                        [\n                          _c(\"label\", { attrs: { for: \"District\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"district\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            _vm._b(\n                              {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.form.District,\n                                    expression: \"form.District\"\n                                  }\n                                ],\n                                staticClass: \"form-control\",\n                                class: {\n                                  \"is-invalid\": _vm.form.errors.has(\"District\")\n                                },\n                                attrs: { name: \"District\", id: \"District\" },\n                                on: {\n                                  change: [\n                                    function($event) {\n                                      var $$selectedVal = Array.prototype.filter\n                                        .call($event.target.options, function(\n                                          o\n                                        ) {\n                                          return o.selected\n                                        })\n                                        .map(function(o) {\n                                          var val =\n                                            \"_value\" in o ? o._value : o.value\n                                          return val\n                                        })\n                                      _vm.$set(\n                                        _vm.form,\n                                        \"District\",\n                                        $event.target.multiple\n                                          ? $$selectedVal\n                                          : $$selectedVal[0]\n                                      )\n                                    },\n                                    function($event) {\n                                      _vm.getVillages(_vm.form.District)\n                                    }\n                                  ]\n                                }\n                              },\n                              \"select\",\n                              _vm.district.id,\n                              false\n                            ),\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select District\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.districts, function(district) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: district.districtID,\n                                    domProps: { value: district.districtID }\n                                  },\n                                  [_vm._v(_vm._s(district.DistrictName))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"District\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Village\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"village\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.Village,\n                                  expression: \"form.Village\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.form.errors.has(\"Village\")\n                              },\n                              attrs: { name: \"Village\", id: \"Village\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"Village\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Village\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.villages, function(village) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: village.id,\n                                    domProps: { value: village.id }\n                                  },\n                                  [_vm._v(_vm._s(village.NameEng))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"Village\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Business\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"business\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.MainBusiness,\n                                  expression: \"form.MainBusiness\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.form.errors.has(\n                                  \"MainBusiness\"\n                                )\n                              },\n                              attrs: {\n                                name: \"MainBusiness\",\n                                id: \"MainBusiness\"\n                              },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"MainBusiness\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select MainBusiness\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.businesses, function(business) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: business.id,\n                                    domProps: { value: business.id }\n                                  },\n                                  [_vm._v(_vm._s(business.CompanyName))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"MainBusiness\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Network\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"network\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.form.MainNetwork,\n                                  expression: \"form.MainNetwork\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.form.errors.has(\"MainNetwork\")\n                              },\n                              attrs: { name: \"MainNetwork\", id: \"MainNetwork\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"MainNetwork\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Main Network\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.networks, function(network) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: network.id,\n                                    domProps: { value: network.id }\n                                  },\n                                  [_vm._v(_vm._s(network.MobName))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.form, field: \"MainNetwork\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-group col-4\" }, [\n                      _c(\"div\", { staticClass: \"file-field\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"btn btn-success btn-md float-left\" },\n                          [\n                            _c(\"img\", {\n                              staticClass: \"img-thumbnail\",\n                              staticStyle: { width: \"50px\", height: \"50px\" },\n                              attrs: {\n                                src: \"/storage/images/\" + _vm.form.Photo\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"span\", [\n                              _vm._v(_vm._s(_vm.$t(\"photo\")) + \" : \")\n                            ]),\n                            _c(\"input\", {\n                              attrs: {\n                                type: \"file\",\n                                name: \"Photo\",\n                                id: \"Photo\"\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.selectFile($event)\n                                }\n                              }\n                            })\n                          ]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"modal-footer\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-danger\",\n                        attrs: { type: \"button\", \"data-dismiss\": \"modal\" }\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"close\")))]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.editmode,\n                            expression: \"editmode\"\n                          }\n                        ],\n                        staticClass: \"btn btn-success\",\n                        attrs: { type: \"submit\" }\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"update\")))]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: !_vm.editmode,\n                            expression: \"!editmode\"\n                          }\n                        ],\n                        staticClass: \"btn btn-primary\",\n                        attrs: { type: \"submit\" }\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"create\")))]\n                    )\n                  ])\n                ]\n              )\n            ])\n          ]\n        )\n      ]\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      {\n        staticClass: \"modal fade\",\n        attrs: {\n          id: \"addNewCase\",\n          tabindex: \"-1\",\n          role: \"dialog\",\n          \"aria-labelledby\": \"addNewCaseLabel\",\n          \"aria-hidden\": \"true\"\n        }\n      },\n      [\n        _c(\n          \"div\",\n          {\n            staticClass: \"modal-dialog modal-dialog-centered modal-lg\",\n            attrs: { role: \"document\" }\n          },\n          [\n            _c(\"div\", { staticClass: \"modal-content\" }, [\n              _c(\"div\", { staticClass: \"modal-header\" }, [\n                _c(\n                  \"h5\",\n                  {\n                    staticClass: \"modal-title\",\n                    attrs: { id: \"addNewCaseLabel\" }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"addnewcase\")))]\n                ),\n                _vm._v(\" \"),\n                _vm._m(1)\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"form\",\n                {\n                  attrs: { enctype: \"multipart/form-data\" },\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      _vm.addNewCase()\n                    }\n                  }\n                },\n                [\n                  _c(\"div\", { staticClass: \"modal-body\" }, [\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"offender_id\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"offenderid\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.offender_id,\n                                expression: \"formcase.offender_id\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"offender_id\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"offender_id\",\n                              readonly: \"\"\n                            },\n                            domProps: { value: _vm.formcase.offender_id },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"offender_id\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"offender_id\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"DetectedDate\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"detecteddate\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.DetectedDate,\n                                expression: \"formcase.DetectedDate\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"DetectedDate\"\n                              )\n                            },\n                            attrs: {\n                              type: \"date\",\n                              name: \"DetectedDate\",\n                              placeholder: \"Detected Date\"\n                            },\n                            domProps: { value: _vm.formcase.DetectedDate },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"DetectedDate\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"DetectedDate\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Type\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"casetype\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.formcase.Type,\n                                  expression: \"formcase.Type\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.formcase.errors.has(\"Type\")\n                              },\n                              attrs: { name: \"Type\", id: \"Type\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.formcase,\n                                    \"Type\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Case Type\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.types, function(type) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: type.id,\n                                    domProps: { value: type.id }\n                                  },\n                                  [_vm._v(_vm._s(type.TypeEng))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"DetectedDate\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"ItemNumber\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"itemnuber\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.ItemNumber,\n                                expression: \"formcase.ItemNumber\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"ItemNumber\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"ItemNumber\",\n                              placeholder: \"Items Number...\"\n                            },\n                            domProps: { value: _vm.formcase.ItemNumber },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"ItemNumber\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"ItemNumber\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Unit\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"unit\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.formcase.Unit,\n                                  expression: \"formcase.Unit\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.formcase.errors.has(\"Unit\")\n                              },\n                              attrs: { name: \"Unit\", id: \"Unit\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.formcase,\n                                    \"Unit\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Case Unit\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.units, function(unit) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: unit.id,\n                                    domProps: { value: unit.id }\n                                  },\n                                  [_vm._v(_vm._s(unit.UnitEng))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Unit\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Amount\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"amount\")) + \" (kip):\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.Amount,\n                                expression: \"formcase.Amount\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.form.errors.has(\"Amount\")\n                            },\n                            attrs: {\n                              type: \"number\",\n                              name: \"Amount\",\n                              placeholder: \"Case Amount value...\"\n                            },\n                            domProps: { value: _vm.formcase.Amount },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"Amount\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Amount\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"CaseDescription\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"casedescription\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"textarea\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.CaseDescription,\n                                expression: \"formcase.CaseDescription\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"CaseDescription\"\n                              )\n                            },\n                            attrs: {\n                              name: \"CaseDescription\",\n                              id: \"CaseDescription\",\n                              placeholder: \"Breif CaseDescription ....\"\n                            },\n                            domProps: { value: _vm.formcase.CaseDescription },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"CaseDescription\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: {\n                              form: _vm.formcase,\n                              field: \"CaseDescription\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Location\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"location\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.formcase.Location,\n                                  expression: \"formcase.Location\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.formcase.errors.has(\n                                  \"Location\"\n                                )\n                              },\n                              attrs: { name: \"Location\", id: \"Location\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.formcase,\n                                    \"Location\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Location\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.provinces, function(province) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: province.id,\n                                    domProps: { value: province.id }\n                                  },\n                                  [_vm._v(_vm._s(province.NameEng))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Location\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Status\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"casestatus\")) + \" :\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.formcase.Status,\n                                  expression: \"formcase.Status\"\n                                }\n                              ],\n                              staticClass: \"form-control\",\n                              class: {\n                                \"is-invalid\": _vm.formcase.errors.has(\"Status\")\n                              },\n                              attrs: { name: \"Status\", id: \"Status\" },\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.formcase,\n                                    \"Status\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(\"Select Status\")\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.statuses, function(status) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: status.id,\n                                    domProps: { value: status.id }\n                                  },\n                                  [_vm._v(_vm._s(status.StatusEng))]\n                                )\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Status\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\"div\", { staticClass: \"form-group col-6\" }, [\n                        _c(\"label\", { attrs: { for: \"Evidence\" } }, [\n                          _vm._v(_vm._s(_vm.$t(\"photoevidence\")) + \" :\")\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"file-field\" }, [\n                          _c(\n                            \"div\",\n                            {\n                              staticClass: \"btn btn-success btn-md float-left\"\n                            },\n                            [\n                              _c(\"span\", [_vm._v(\"Evidence Photo: \")]),\n                              _c(\"input\", {\n                                attrs: {\n                                  type: \"file\",\n                                  name: \"Evidence\",\n                                  id: \"Evidence\"\n                                },\n                                on: {\n                                  change: function($event) {\n                                    _vm.selectPicture($event)\n                                  }\n                                }\n                              })\n                            ]\n                          )\n                        ])\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Participant1\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"participantname\")) + \" 1:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.Participant1,\n                                expression: \"formcase.Participant1\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"Participant1\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"Participant1\",\n                              placeholder: \"Name of Participant 1 ....\"\n                            },\n                            domProps: { value: _vm.formcase.Participant1 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"Participant1\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Participant1\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Participant2\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"participantname\")) + \" 2:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.Participant2,\n                                expression: \"formcase.Participant2\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"Participant2\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"Participant2\",\n                              placeholder: \"Name of Participant 2 ....\"\n                            },\n                            domProps: { value: _vm.formcase.Participant2 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"Participant2\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Participant2\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Participant3\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"participantname\")) + \" 3:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.Participant3,\n                                expression: \"formcase.Participant3\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"Participant3\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"Participant3\",\n                              placeholder: \"Name of Participant 3 ....\"\n                            },\n                            domProps: { value: _vm.formcase.Participant3 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"Participant3\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Participant3\" }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"form-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Participant4\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"participantname\")) + \" 4:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.Participant4,\n                                expression: \"formcase.Participant4\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"Participant4\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"Participant4\",\n                              placeholder: \"Name of Participant 4 ....\"\n                            },\n                            domProps: { value: _vm.formcase.Participant4 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"Participant4\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Participant4\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Participant5\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"participantname\")) + \" 5:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.Participant5,\n                                expression: \"formcase.Participant5\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"Participant5\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"Participant5\",\n                              placeholder: \"Name of Participant 5 ....\"\n                            },\n                            domProps: { value: _vm.formcase.Participant5 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"Participant5\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Participant5\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group col-4\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"Participant6\" } }, [\n                            _vm._v(_vm._s(_vm.$t(\"participantname\")) + \" 6:\")\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.formcase.Participant6,\n                                expression: \"formcase.Participant6\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            class: {\n                              \"is-invalid\": _vm.formcase.errors.has(\n                                \"Participant6\"\n                              )\n                            },\n                            attrs: {\n                              type: \"text\",\n                              name: \"Participant6\",\n                              placeholder: \"Name of Participant 6 ....\"\n                            },\n                            domProps: { value: _vm.formcase.Participant6 },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.formcase,\n                                  \"Participant6\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"has-error\", {\n                            attrs: { form: _vm.formcase, field: \"Participant6\" }\n                          })\n                        ],\n                        1\n                      )\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"modal-footer\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-danger\",\n                        attrs: { type: \"button\", \"data-dismiss\": \"modal\" }\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"close\")))]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-primary\",\n                        attrs: { type: \"submit\" }\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"add\")))]\n                    )\n                  ])\n                ]\n              )\n            ])\n          ]\n        )\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"button\",\n      {\n        staticClass: \"close\",\n        attrs: {\n          type: \"button\",\n          \"data-dismiss\": \"modal\",\n          \"aria-label\": \"Close\"\n        }\n      },\n      [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"×\")])]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"button\",\n      {\n        staticClass: \"close\",\n        attrs: {\n          type: \"button\",\n          \"data-dismiss\": \"modal\",\n          \"aria-label\": \"Close\"\n        }\n      },\n      [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"×\")])]\n    )\n  }\n]\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-27446604\", esExports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///301\n");

/***/ })

});